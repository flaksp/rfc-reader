name: Publish

on:
  release:
    types:
      - published

jobs:
  build_chromium:
    name: Build (Chromium)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.4.0

      - name: Setup Node.js
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '16.x'

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache dependencies
        uses: actions/cache@v2.1.6
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-npm-production-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-production-

      - name: Install npm dependencies
        run: npm ci --production --prefer-offline

      - name: Build extension
        run: npx gulp
        env:
          TARGET_PLATFORM: chromium
          GIT_VERSION: ${{ github.sha }}
          BUILD_NUMBER: ${{ github.run_number }}
          APP_VERSION: ${{ github.event.release.tag_name }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2.2.4
        with:
          name: chromium
          path: dist

  build_webext:
    name: Build (WebExtensions)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.4.0

      - name: Setup Node.js
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '16.x'

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache dependencies
        uses: actions/cache@v2.1.6
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-npm-production-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-production-

      - name: Install npm dependencies
        run: npm ci --production --prefer-offline

      - name: Build extension
        run: npx gulp
        env:
          TARGET_PLATFORM: webext
          FIREFOX_EXTENSION_ID: '{755d8e2c-7b6b-4c41-84c1-a4a5b1a09c0d}'
          GIT_VERSION: ${{ github.sha }}
          BUILD_NUMBER: ${{ github.run_number }}
          APP_VERSION: ${{ github.event.release.tag_name }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2.2.4
        with:
          name: webext
          path: dist

  upload_to_chrome_web_store:
    name: Upload (Chrome Web Store)
    runs-on: ubuntu-latest
    needs: [build_chromium]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.4.0

      - name: Setup Node.js
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '16.x'

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache dependencies
        uses: actions/cache@v2.1.6
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-npm-production-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-production-

      - name: Install npm dependencies
        run: npm ci --production --prefer-offline

      - name: Download build artifacts
        uses: actions/download-artifact@v3.0.1
        with:
          name: chromium
          path: dist

      - name: Upload to Chrome Web Store
        run: npx chrome-webstore-upload upload --extension-id $APP_ID --source dist
        env:
          APP_ID: jhmoebgbkkbpdmmigmdmbbdbpolnddod
          CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
          REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}

      - name: Publish at Chrome Web Store
        run: npx chrome-webstore-upload publish --extension-id $APP_ID
        env:
          APP_ID: jhmoebgbkkbpdmmigmdmbbdbpolnddod
          CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
          REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}

  upload_to_firefox_addons:
    name: Upload (Firefox Add-ons)
    runs-on: ubuntu-latest
    needs: [build_webext]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.4.0

      - name: Setup Node.js
        uses: actions/setup-node@v2.4.1
        with:
          node-version: '16.x'

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache dependencies
        uses: actions/cache@v2.1.6
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-npm-production-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-production-

      - name: Install npm dependencies
        run: npm ci --production --prefer-offline

      - name: Download build artifacts
        uses: actions/download-artifact@v3.0.1
        with:
          name: webext
          path: dist

      - name: Upload and publish to Firefox Add-ons
        run: npx web-ext-submit --source-dir dist
        env:
          WEB_EXT_API_KEY: ${{ secrets.WEB_EXT_API_KEY }}
          WEB_EXT_API_SECRET: ${{ secrets.WEB_EXT_API_SECRET }}
